- name: Set cluster name based on IP
  ansible.builtin.set_fact:
    vault_cluster_name: "{{ vault_cluster_prefix }}-{{ ansible_default_ipv4.address | regex_replace('\\.', '-') }}"

- name: Debug cluster name
  ansible.builtin.debug:
    var: vault_cluster_name

- name: Check if kubeconfig exists
  ansible.builtin.stat:
    path: "{{ kubeconfig_source }}"
  register: kubeconfig_stat
  become: true

- name: Validate kubeconfig exists
  ansible.builtin.assert:
    that:
      - kubeconfig_stat.stat.exists
    fail_msg: "Kubeconfig file not found at {{ kubeconfig_source }}"

- name: Create temporary kubeconfig with correct server address
  ansible.builtin.shell: |
    sed "s/127.0.0.1/{{ ansible_host }}/g" {{ kubeconfig_source }} > {{ temp_kubeconfig_path }}
  args:
    executable: /bin/bash
  register: kubeconfig_result
  become: true
  changed_when: false

- name: Authenticate to Vault using AppRole
  ansible.builtin.uri:
    url: "{{ vault_url }}/v1/auth/{{ vault_approle_mount_point }}/login"
    method: POST
    body_format: json
    body:
      role_id: "{{ vault_role_id }}"
      secret_id: "{{ vault_secret_id }}"
    return_content: yes
    status_code: 200
    validate_certs: no
  register: vault_login
  no_log: true

- name: Read kubeconfig content
  ansible.builtin.slurp:
    src: "{{ temp_kubeconfig_path }}"
  register: kubeconfig_content
  no_log: true

- name: Upload kubeconfig to Vault
  ansible.builtin.uri:
    url: "{{ vault_url }}/v1/{{ vault_secret_path }}/data/{{ vault_cluster_name }}"
    method: POST
    headers:
      X-Vault-Token: "{{ vault_login.json.auth.client_token }}"
    body_format: json
    body:
      data:
        kubeconfig: "{{ kubeconfig_content.content | b64decode }}"
        cluster_name: "{{ vault_cluster_name }}"
        api_server: "{{ ansible_host }}"
        cluster_type: "k3s"
        timestamp: "{{ ansible_date_time.iso8601 }}"
    return_content: yes
    status_code: 200
    validate_certs: no
  register: vault_upload
  no_log: true

- name: Clean up temporary kubeconfig file
  ansible.builtin.file:
    path: "{{ temp_kubeconfig_path }}"
    state: absent
  become: true
